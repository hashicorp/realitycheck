version: 2
jobs:
  vault-test:
    docker:
    - image: python:3.6.0
    steps:
    - checkout
    - run:
        name: Attempt to query vault
        command: |
          echo "My IP is: $(curl --silent icanhazip.com)"

          echo 'Adding vault bastion SSH key to key ring...'
          ssh-add <(echo "$VAULT_BASTION_SSH_KEY" | base64 -d)

          echo "Forwarding port 8200, via $VAULT_BASTION_HOST on localhost to: $VAULT_NLB_HOST"
          ssh \
            -o StrictHostKeyChecking=no \
            -o ExitOnForwardFailure=yes \
            -N \
            -f \
            -q \
            -L "8200:$VAULT_NLB_HOST:8200" \
            "ubuntu@$VAULT_BASTION_HOST"

          export VAULT_ADDR="http://localhost:8200"
          echo "VAULT_ADDR set to: '$VAULT_ADDR'"

          echo "Ensuring vault is reachable with a request to: $VAULT_ADDR/v1/sys/health"
          curl --request HEAD --max-time 5 "$VAULT_ADDR/v1/sys/health"

          echo 'Installing unzip (blergh), and then downloading and extracting vault to /usr/local/bin...'
          # also jq for now I suppose... presumably all this jazz can be baked into somesort of other step / container?
          apt update 1>/dev/null && apt install --yes unzip jq 1>/dev/null
          export VAULT_VERSION=1.4.0
          wget \
            --no-verbose \
            --output-document="/tmp/vault.zip" \
            "https://releases.hashicorp.com/vault/$VAULT_VERSION+ent/vault_$VAULT_VERSION+ent_linux_amd64.zip"
          unzip /tmp/vault.zip -d /usr/local/bin
          chmod +x /usr/local/bin/vault
          rm -rf /tmp/vault.zip

          echo 'Logging into vault using approle...'
          vault read sys/init
          approle_login_response="$(\
            vault write auth/approle/login \
              -format=json \
              role_id="$VAULT_ROLE_ID" \
              secret_id="$VAULT_SECRET_ID" \
          )"
          echo "$approle_login_response" | jq -r '.auth | .client_token' > ~/.vault-token

          echo 'Token lookup output:'
          vault token lookup

          echo 'Installing aws cli...'
          pip install --quiet awscli

          echo 'Generate AWS STS credentials...'
          sts_response=$(vault read -format=json aws-hc-circleci-staging/sts/circleci-test)

          echo 'Setting AWS_ environmental variables with STS creds...'
          export AWS_ACCESS_KEY_ID="$(echo "$sts_response" | jq -r '.data | .access_key')"
          export AWS_SECRET_ACCESS_KEY="$(echo "$sts_response" | jq -r '.data | .secret_key')"
          export AWS_SESSION_TOKEN="$(echo "$sts_response" | jq -r '.data | .security_token')"
          export AWS_DEFAULT_REGION="us-west-2"

          echo 'Attempting to describe EC2 instances with credentials...'
          aws ec2 describe-instances \
            --query 'Reservations[*].Instances[*].InstanceId'

          echo 'Revoking vault token...'
          vault token revoke -self

workflows:
  version: 2
  vault-testing:
    jobs:
    - vault-test:
        context: vault-approle-aws-access-test
